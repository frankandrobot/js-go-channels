{"version":3,"sources":["../../src/utils.js"],"names":["BufferItem","data","next","LinkedListBuffer","head","undefined","tail","add","item","bufferItem","pop","id","uuid","checkGenerator","generator","Error","iterator","Symbol"],"mappings":"AAAA,WAAaA,UAAb,GACE,oBAAYC,IAAZ,EAAkBC,IAAlB,EAAwB;AAAA;;AACtB,OAAKD,IAAL,GAAYA,IAAZ;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACD,CAJH;;AAOA,WAAaC,gBAAb;AACE,8BAAc;AAAA;;AACZ,SAAKC,IAAL,GAAYC,SAAZ;AACA,SAAKC,IAAL,GAAYD,SAAZ;AACD;;AAJH,6BAMEE,GANF,gBAMMC,IANN,EAMY;AACR,QAAMC,aAAa,IAAIT,UAAJ,CAAeQ,IAAf,CAAnB;;AAEA,QAAI,CAAC,KAAKJ,IAAV,EAAgB;AACd,WAAKA,IAAL,GAAYK,UAAZ;AACA,WAAKH,IAAL,GAAYG,UAAZ;AACA;AACD;AACD,SAAKH,IAAL,CAAUJ,IAAV,GAAiBO,UAAjB;AACD,GAfH;;AAAA,6BAiBEC,GAjBF,kBAiBQ;AACJ,QAAG,CAAC,KAAKN,IAAT,EAAe;AACb,aAAOC,SAAP;AACD;AACD,QAAMG,OAAO,KAAKJ,IAAlB;AACA,SAAKA,IAAL,GAAY,KAAKA,IAAL,CAAUF,IAAtB;AACA,WAAOM,KAAKP,IAAZ;AACD,GAxBH;;AAAA;AAAA;;AA4BA,IAAIU,KAAK,CAAT;;AAEA,OAAO,SAAUC,IAAV,GAAiB;AAGtB,SAAOD,IAAP;AACD;;AAGD,OAAO,SAASE,cAAT,CAAwBC,SAAxB,EAAmC;AAExC,MAAI,CAACA,SAAD,IAAc,OAAOA,SAAP,KAAqB,UAAvC,EAAoD;AAClD,UAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AACD;AACD,MAAMC,WAAWF,WAAjB;AACA,MAAI,CAACE,QAAD,IAAa,OAAOA,SAASC,OAAOD,QAAhB,CAAP,KAAqC,UAAtD,EAAmE;AACjE,UAAM,IAAID,KAAJ,CAAU,kBAAV,CAAN;AACD;AACD,SAAOC,QAAP;AACD","file":"utils.js","sourcesContent":["export class BufferItem {\n  constructor(data, next) {\n    this.data = data\n    this.next = next\n  }\n}\n\nexport class LinkedListBuffer {\n  constructor() {\n    this.head = undefined\n    this.tail = undefined\n  }\n\n  add(item) {\n    const bufferItem = new BufferItem(item)\n    // first item ever\n    if (!this.head) {\n      this.head = bufferItem\n      this.tail = bufferItem\n      return\n    }\n    this.tail.next = bufferItem\n  }\n\n  pop() {\n    if(!this.head) {\n      return undefined\n    }\n    const item = this.head\n    this.head = this.head.next\n    return item.data\n  }\n}\n\n\nlet id = 0\n\nexport function  uuid() {\n  // Note that we're not using generators to avoid having generators\n  // as a libary dependency.\n  return id++\n}\n\n\nexport function checkGenerator(generator) {\n  // check if generator\n  if (!generator || typeof generator !== 'function' ) {\n    throw new Error('Need a generator');\n  }\n  const iterator = generator()\n  if (!iterator || typeof iterator[Symbol.iterator] !== 'function' ) {\n    throw new Error('Need an iterator');\n  }\n  return iterator\n}\n"]}